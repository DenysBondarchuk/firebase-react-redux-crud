{"ast":null,"code":"var _jsxFileName = \"/Users/denysbondarchuk/Documents/home/front-end/CRUD/firebase-react-redux-crud/src/components/InputText/InputText.js\";\nimport React, { useCallback, useState } from 'react';\nimport classNames from 'classnames';\nimport InputError from '../InputError';\nimport InputLabel from '../InputLabel';\nimport './styles.scss'; // --------------------------------------------------------------------------------------------------------------------\n\nconst InputText = ({\n  type,\n  id,\n  name,\n  placeholder,\n  onChange,\n  error,\n  text,\n  value\n}) => {\n  const [selfValue, setSelfValue] = useState('');\n  const inputChangeHandler = useCallback(e => {\n    setSelfValue(e.currentTarget.value);\n  }, []);\n  const change = onChange ? onChange : inputChangeHandler;\n  const val = value ? value : selfValue;\n  const inputClasses = classNames('input-text', {\n    [`input-text--error`]: error\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: inputClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: id,\n    text: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: id,\n    type: type,\n    name: name,\n    placeholder: placeholder,\n    value: val,\n    onChange: change,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InputError, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default InputText;","map":{"version":3,"sources":["/Users/denysbondarchuk/Documents/home/front-end/CRUD/firebase-react-redux-crud/src/components/InputText/InputText.js"],"names":["React","useCallback","useState","classNames","InputError","InputLabel","InputText","type","id","name","placeholder","onChange","error","text","value","selfValue","setSelfValue","inputChangeHandler","e","currentTarget","change","val","inputClasses"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAO,eAAP,C,CAEA;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,EAAR;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,WAAlB;AAA+BC,EAAAA,QAA/B;AAAyCC,EAAAA,KAAzC;AAAgDC,EAAAA,IAAhD;AAAsDC,EAAAA;AAAtD,CAAD,KAAmE;AACnF,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMe,kBAAkB,GAAGhB,WAAW,CAACiB,CAAC,IAAI;AAC1CF,IAAAA,YAAY,CAACE,CAAC,CAACC,aAAF,CAAgBL,KAAjB,CAAZ;AACD,GAFqC,EAEnC,EAFmC,CAAtC;AAIA,QAAMM,MAAM,GAAGT,QAAQ,GAAGA,QAAH,GAAcM,kBAArC;AACA,QAAMI,GAAG,GAAGP,KAAK,GAAGA,KAAH,GAAWC,SAA5B;AAEA,QAAMO,YAAY,GAAGnB,UAAU,CAC7B,YAD6B,EAE7B;AAAE,KAAE,mBAAF,GAAuBS;AAAzB,GAF6B,CAA/B;AAKA,sBACE;AAAK,IAAA,SAAS,EAAEU,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEd,EAAhB;AAAoB,IAAA,IAAI,EAAEK,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACE,IAAA,EAAE,EAAEL,EADN;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,IAAI,EAAEE,IAHR;AAIE,IAAA,WAAW,EAAEC,WAJf;AAKE,IAAA,KAAK,EAAEW,GALT;AAME,IAAA,QAAQ,EAAED,MANZ;AAOE,IAAA,YAAY,EAAC,KAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAWE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAER,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAeD,CA9BD;;AAgCA,eAAeN,SAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport classNames from 'classnames';\n\nimport InputError from '../InputError';\nimport InputLabel from '../InputLabel';\n\nimport './styles.scss';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst InputText = ({ type, id, name, placeholder, onChange, error, text, value }) => {\n  const [selfValue, setSelfValue] = useState('');\n\n  const inputChangeHandler = useCallback(e => {\n    setSelfValue(e.currentTarget.value);\n  }, []);\n\n  const change = onChange ? onChange : inputChangeHandler;\n  const val = value ? value : selfValue;\n\n  const inputClasses = classNames(\n    'input-text',\n    { [`input-text--error`]: error },\n  );\n\n  return (\n    <div className={inputClasses}>\n      <InputLabel id={id} text={text} />\n      <input\n        id={id}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        value={val}\n        onChange={change}\n        autoComplete=\"off\"\n      />\n      <InputError error={error} />\n    </div>\n  );\n};\n\nexport default InputText;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as yup from 'yup'; // --------------------------------------------------------------------------------------------------------------------\n\nconst REQUIRED = 'required';\nconst CODE_ERROR = 'String from 5 to 10 characters';\nconst NAME_ERROR = 'String from 5 to 100 characters';\nconst PRICE_ERROR = 'A number ranging from 0.01 to 1,000,000';\nconst SHELF_LIFE_ERROR = 'Must be an integer number from 1 to 1000';\nconst RELEASE_ERROR = 'String up to 2000 characters';\nconst TYPE_ERROR = 'Please enter a valid number'; // --------------------------------------------------------------------------------------------------------------------\n\nconst initialValues = {\n  code: '',\n  name: '',\n  price: '',\n  shelfLife: '',\n  compositionAndFormOfRelease: '',\n  indication: '',\n  сontrandications: ''\n}; // --------------------------------------------------------------------------------------------------------------------\n\nconst validationSchema = yup.object({\n  code: yup.string().required(REQUIRED).min(5, CODE_ERROR).max(10, CODE_ERROR),\n  name: yup.string().required(REQUIRED).min(5, NAME_ERROR).max(100, NAME_ERROR),\n  price: yup.number().required(REQUIRED).min(0.01, PRICE_ERROR).max(1000000, PRICE_ERROR).typeError(TYPE_ERROR),\n  shelfLife: yup.number().required(REQUIRED).integer(SHELF_LIFE_ERROR).min(1, SHELF_LIFE_ERROR).max(1000, SHELF_LIFE_ERROR),\n  compositionAndFormOfRelease: yup.string().max(2000, RELEASE_ERROR),\n  indication: yup.string().max(2000, RELEASE_ERROR),\n  сontrandications: yup.string().max(2000, RELEASE_ERROR)\n}); // --------------------------------------------------------------------------------------------------------------------\n\nexport default {\n  initialValues,\n  validationSchema\n};","map":{"version":3,"sources":["/Users/denysbondarchuk/Documents/home/front-end/CRUD/firebase-react-redux-crud/src/components/Form/FormValidation.js"],"names":["yup","REQUIRED","CODE_ERROR","NAME_ERROR","PRICE_ERROR","SHELF_LIFE_ERROR","RELEASE_ERROR","TYPE_ERROR","initialValues","code","name","price","shelfLife","compositionAndFormOfRelease","indication","сontrandications","validationSchema","object","string","required","min","max","number","typeError","integer"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB,C,CAEA;;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,UAAU,GAAG,gCAAnB;AACA,MAAMC,UAAU,GAAG,iCAAnB;AACA,MAAMC,WAAW,GAAG,yCAApB;AACA,MAAMC,gBAAgB,GAAG,0CAAzB;AACA,MAAMC,aAAa,GAAG,8BAAtB;AACA,MAAMC,UAAU,GAAG,6BAAnB,C,CAEA;;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,IAAI,EAAE,EAFc;AAGpBC,EAAAA,KAAK,EAAE,EAHa;AAIpBC,EAAAA,SAAS,EAAE,EAJS;AAKpBC,EAAAA,2BAA2B,EAAE,EALT;AAMpBC,EAAAA,UAAU,EAAE,EANQ;AAOpBC,EAAAA,gBAAgB,EAAE;AAPE,CAAtB,C,CAUA;;AAEA,MAAMC,gBAAgB,GAAGhB,GAAG,CAACiB,MAAJ,CAAW;AAElCR,EAAAA,IAAI,EAAET,GAAG,CAACkB,MAAJ,GACHC,QADG,CACMlB,QADN,EAEHmB,GAFG,CAEC,CAFD,EAEIlB,UAFJ,EAGHmB,GAHG,CAGC,EAHD,EAGKnB,UAHL,CAF4B;AAOlCQ,EAAAA,IAAI,EAAEV,GAAG,CAACkB,MAAJ,GACHC,QADG,CACMlB,QADN,EAEHmB,GAFG,CAEC,CAFD,EAEIjB,UAFJ,EAGHkB,GAHG,CAGC,GAHD,EAGMlB,UAHN,CAP4B;AAYlCQ,EAAAA,KAAK,EAAEX,GAAG,CAACsB,MAAJ,GACJH,QADI,CACKlB,QADL,EAEJmB,GAFI,CAEA,IAFA,EAEMhB,WAFN,EAGJiB,GAHI,CAGA,OAHA,EAGSjB,WAHT,EAIJmB,SAJI,CAIMhB,UAJN,CAZ2B;AAkBlCK,EAAAA,SAAS,EAAEZ,GAAG,CAACsB,MAAJ,GACRH,QADQ,CACClB,QADD,EAERuB,OAFQ,CAEAnB,gBAFA,EAGRe,GAHQ,CAGJ,CAHI,EAGDf,gBAHC,EAIRgB,GAJQ,CAIJ,IAJI,EAIEhB,gBAJF,CAlBuB;AAwBlCQ,EAAAA,2BAA2B,EAAEb,GAAG,CAACkB,MAAJ,GAC1BG,GAD0B,CACtB,IADsB,EAChBf,aADgB,CAxBK;AA2BlCQ,EAAAA,UAAU,EAAEd,GAAG,CAACkB,MAAJ,GACTG,GADS,CACL,IADK,EACCf,aADD,CA3BsB;AA8BlCS,EAAAA,gBAAgB,EAAEf,GAAG,CAACkB,MAAJ,GACfG,GADe,CACX,IADW,EACLf,aADK;AA9BgB,CAAX,CAAzB,C,CAmCA;;AAEA,eAAe;AACbE,EAAAA,aADa;AAEbQ,EAAAA;AAFa,CAAf","sourcesContent":["import * as yup from 'yup';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst REQUIRED = 'required';\nconst CODE_ERROR = 'String from 5 to 10 characters';\nconst NAME_ERROR = 'String from 5 to 100 characters';\nconst PRICE_ERROR = 'A number ranging from 0.01 to 1,000,000';\nconst SHELF_LIFE_ERROR = 'Must be an integer number from 1 to 1000';\nconst RELEASE_ERROR = 'String up to 2000 characters';\nconst TYPE_ERROR = 'Please enter a valid number';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst initialValues = {\n  code: '',\n  name: '',\n  price: '',\n  shelfLife: '',\n  compositionAndFormOfRelease: '',\n  indication: '',\n  сontrandications: '',\n};\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst validationSchema = yup.object({\n\n  code: yup.string()\n    .required(REQUIRED)\n    .min(5, CODE_ERROR)\n    .max(10, CODE_ERROR),\n\n  name: yup.string()\n    .required(REQUIRED)\n    .min(5, NAME_ERROR)\n    .max(100, NAME_ERROR),\n\n  price: yup.number()\n    .required(REQUIRED)\n    .min(0.01, PRICE_ERROR)\n    .max(1000000, PRICE_ERROR)\n    .typeError(TYPE_ERROR),\n\n  shelfLife: yup.number()\n    .required(REQUIRED)\n    .integer(SHELF_LIFE_ERROR)\n    .min(1, SHELF_LIFE_ERROR)\n    .max(1000, SHELF_LIFE_ERROR),\n\n  compositionAndFormOfRelease: yup.string()\n    .max(2000, RELEASE_ERROR),\n\n  indication: yup.string()\n    .max(2000, RELEASE_ERROR),\n\n  сontrandications: yup.string()\n    .max(2000, RELEASE_ERROR),\n\n});\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport default {\n  initialValues,\n  validationSchema,\n};\n"]},"metadata":{},"sourceType":"module"}
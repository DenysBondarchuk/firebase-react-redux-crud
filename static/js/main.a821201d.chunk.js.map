{"version":3,"sources":["components/Button/Button.jsx","services/firebase.js","context/AuthContext.js","components/Header/Header.jsx","constants/actionTypes.js","store/actions/index.js","components/Medical/MedicalItem/MedicalItem.jsx","components/Loader/Loader.js","components/Medical/MedicalList/MedicalList.jsx","components/InputError/InputError.js","components/InputLabel/InputLabel.js","components/InputText/InputText.js","components/Form/FormRequiredFields/FormRequiredFields.jsx","components/Textarea/Textarea.js","components/Form/FormNotRequiredFields/FormNotRequiredFields.js","components/Form/FormValidation.js","components/Form/Form.jsx","store/actions/modalActions.js","components/Portal/Portal.js","components/Modal/Modal.js","components/Plus/Plus.js","pages/Home/Home.jsx","components/FormSignIn/FormSignInValidation.js","components/FormSignIn/FormSignIn.jsx","pages/SignIn/SignIn.jsx","constants/paths.js","pages/Page404/Page404.jsx","components/PrivateRoute/PrivateRoute.jsx","App.js","serviceWorker.js","services/CRUD.js","store/sagas/dataSaga.js","store/rootSaga.js","store/reducers/medicalReducer.js","store/reducers/modalReducer.js","store/reducers/rootReducer.js","store/index.js","index.js"],"names":["Button","type","text","variant","disabled","className","onClick","clickHandler","useCallback","inputClasses","classNames","app","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","databaseFirebase","ref","signOut","auth","AuthContext","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","useEffect","onAuthStateChanged","user","style","textAlign","Provider","value","memo","useContext","DATA","FETCH","REQUESTED","REQUESTED_SUCCESS","REQUESTED_ERROR","ADD","ITEM","ITEM_SUCCESS","DELETE","UPDATE","EDIT","ITEM_START","ITEM_CLEAR","CREATE","addItemSuccess","payload","deleteItemSuccess","updateItemSuccess","editItem","editItemClear","MedicalItem","dispatch","useDispatch","id","subItems","title","code","name","price","map","index","key","Loader","MedicalList","medicalData","useSelector","state","medicalReducer","medicalList","medicalDataLoader","loading","item","InputError","error","InputLabel","htmlFor","InputText","placeholder","onChange","selfValue","setSelfValue","inputChangeHandler","e","currentTarget","change","val","autoComplete","FormRequiredFields","values","errors","handleChange","shelfLife","Textarea","textareaChangeHandler","rows","FormNotRequiredFields","compositionAndFormOfRelease","indication","—Åontrandications","NAME_ERROR","PRICE_ERROR","SHELF_LIFE_ERROR","RELEASE_ERROR","initialValues","validationSchema","yup","required","min","max","typeError","integer","Form","medicalEdit","handleToggle","formSubmit","updateItem","showRequired","setShowRequired","handleShow","FormValidation","onSubmit","enableReinitialize","handleSubmit","Portal","selector","useRef","mounted","setMounted","current","document","querySelector","createPortal","Modal","isShown","modalReducer","Plus","Home","email","password","withRouter","history","handleLogin","a","signInWithEmailAndPassword","push","alert","FormSignInValidation","SignIn","to","sitePath","Page404","PrivateRoute","RouteComponent","component","rest","render","routeProps","App","createBrowserHistory","basename","process","exact","path","Boolean","window","location","hostname","match","dataFetchFirebase","Promise","resolve","reject","once","snapshot","todo","todoList","addItemFirebase","then","data","getKey","catch","deleteItemFirebase","child","remove","updateItemFirebase","update","dataFetch","watchDataFetch","itemAdd","watchItemAdd","itemEdit","watchItemEdit","itemDelete","watchItemDelete","itemUpdate","watchItemUpdate","itemCreate","watchItemCreate","put","call","takeEvery","takeLatest","rootSaga","all","initialState","action","filter","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","run","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.a821201d.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport classNames from 'classnames';\n\nimport './styles.scss';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst Button = ({ type, text, variant, disabled, className, onClick }) => {\n\n  const clickHandler = useCallback(() => {\n    onClick && onClick();\n  }, [onClick]);\n\n  const inputClasses = classNames(\n    'btn',\n    { [`btn-${variant}`] : variant },\n    { [`${className}`] : className }\n  );\n\n  return (\n    <button\n      type={type}\n      className={inputClasses}\n      disabled={disabled}\n      onClick={clickHandler}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport 'firebase/firestore';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport const app = firebase.initializeApp({\n  apiKey: \"AIzaSyDU9ud4Y94YZUXhWYEgxwQW984PzmYNSKA\",\n  authDomain: \"react-firebase-auth-c345d.firebaseapp.com\",\n  databaseURL: \"https://react-firebase-auth-c345d.firebaseio.com\",\n  projectId: \"react-firebase-auth-c345d\",\n  storageBucket: \"react-firebase-auth-c345d.appspot.com\",\n  messagingSenderId: \"868637411565\",\n  appId: \"1:868637411565:web:e1c7fb57d0833cc263e4e4\"\n});\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport const databaseFirebase = firebase.database().ref('medicines_denys');\n\n// export const databaseCollection = firebase.firestore().collection('MedicineList');\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport const signOut = () => app.auth().signOut();\n\n// --------------------------------------------------------------------------------------------------------------------\n\n\nexport default {\n  app,\n  databaseFirebase,\n  signOut,\n  // databaseCollection,\n};\n\n","import React, { useEffect, useState, createContext } from 'react';\n\nimport { app } from '../services/firebase';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport const AuthContext = createContext();\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState(true);\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged((user) => {\n      setCurrentUser(user);\n      setPending(false);\n    });\n  }, []);\n\n  if (pending) {\n    return <p style={{ textAlign: 'center' }}>Authorization check...</p>;\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useContext, memo } from 'react';\n\nimport Button from '../Button';\n\nimport { AuthContext } from '../../context/AuthContext';\nimport { signOut } from '../../services/firebase';\nimport './styles.scss';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst Header = () => {\n  const { currentUser } = useContext(AuthContext);\n\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <div className=\"header__wrap\">\n          <p>Welcome</p>\n\n          <nav className=\"header__nav\">\n            <ul className=\"header__list\">\n              <Button\n                type=\"button\"\n                variant=\"secondary\"\n                text=\"Sign Out\"\n                disabled={!currentUser}\n                onClick={signOut}\n              />\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default memo(Header);\n","export const DATA = {\n  FETCH: 'DATA_FETCH',\n  REQUESTED: 'DATA_REQUESTED',\n  REQUESTED_SUCCESS: 'DATA_REQUESTED_SUCCESS',\n  REQUESTED_ERROR: 'DATA_REQUESTED_ERROR',\n};\n\nexport const ADD = {\n  ITEM: 'ADD_ITEM',\n  ITEM_SUCCESS: 'ADD_ITEM_SUCCESS',\n};\n\nexport const DELETE = {\n  ITEM: 'DELETE_ITEM',\n  ITEM_SUCCESS: 'DELETE_ITEM_SUCCESS',\n};\n\nexport const UPDATE = {\n  ITEM: 'UPDATE_ITEM',\n  ITEM_SUCCESS: 'UPDATE_ITEM_SUCCESS',\n};\n\nexport const EDIT = {\n  ITEM: 'EDIT_ITEM',\n  ITEM_START: 'EDIT_ITEM_START',\n  ITEM_CLEAR: 'EDIT_ITEM_CLEAR',\n};\n\nexport const CREATE = {\n  ITEM: 'ITEM_CREATE'\n};\n\nexport default {\n  DATA,\n  ADD,\n  DELETE,\n  UPDATE,\n  EDIT,\n  CREATE\n};\n","import { ADD, DATA, DELETE, EDIT, UPDATE, CREATE } from '../../constants/actionTypes';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport const dataFetch = () => ({\n  type: DATA.FETCH,\n});\n\nexport const dataRequested = () => ({\n  type: DATA.REQUESTED,\n});\n\nexport const dataRequestedSuccess = (payload) => ({\n  type: DATA.REQUESTED_SUCCESS,\n  payload,\n});\n\nexport const dataRequestedError = () => ({\n  type: DATA.REQUESTED_ERROR,\n});\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport const addItem = (payload) => ({\n  type: ADD.ITEM,\n  payload,\n});\n\nexport const addItemSuccess = (payload) => ({\n  type: ADD.ITEM_SUCCESS,\n  payload,\n});\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport const deleteItem = (payload) => ({\n  type: DELETE.ITEM,\n  payload,\n});\n\nexport const deleteItemSuccess = (payload) => ({\n  type: DELETE.ITEM_SUCCESS,\n  payload,\n});\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport const updateItem = (payload) => ({\n  type: UPDATE.ITEM,\n  payload,\n});\n\nexport const updateItemSuccess  = (payload) => ({\n  type: UPDATE.ITEM_SUCCESS,\n  payload,\n});\n\n// --------------------------------------------------------------------------------------------------------------------\n\n\nexport const editItem = (payload) => ({\n  type: EDIT.ITEM,\n  payload,\n});\n\nexport const editItemStart = (payload) => ({\n  type: EDIT.ITEM_START,\n  payload,\n});\n\nexport const editItemClear = () => ({\n  type: EDIT.ITEM_CLEAR,\n});\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport const itemCreate = () => ({\n  type: CREATE.ITEM\n});\n\n\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Button from '../../Button';\n\nimport { deleteItem, editItemStart } from '../../../store/actions';\nimport './styles.scss';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst MedicalItem = ({ value }) => {\n  const dispatch = useDispatch();\n\n  const { id, code, name, price } = value;\n\n  const handleEdit = () => dispatch(editItemStart(id));\n  const handleDelete = () => dispatch(deleteItem(id));\n\n  const subItems = [\n    {\n      title: 'Code', value: code,\n    },\n    {\n      title: 'Name', value: name,\n    },\n    {\n      title: 'Price', value: price,\n    },\n  ];\n\n  return (\n    <li className=\"medical-item\">\n      <div className=\"medical-item__list\">\n        {\n          subItems.map(({ title, value }, index) => (\n            <div className=\"medical-item__block\" key={index}>\n              <span className=\"medical-item__title\">{title}:</span>\n              <span className=\"medical-item__value\" title={value}>{value}</span>\n            </div>\n          ))\n        }\n      </div>\n      <div className=\"medical-item__controls\">\n        <Button type=\"button\" text=\"Edit\" variant=\"secondary\" onClick={handleEdit} />\n        <Button type=\"button\" text=\"Delete\" variant=\"danger\" onClick={handleDelete} />\n      </div>\n    </li>\n  );\n};\n\nexport default MedicalItem;\n","import React from 'react';\n\nimport './styles.scss';\n\n//---------------------------------------------------------------------------------------------------------------------\n\nconst Loader = () => <div className=\"loader\" />;\n\nexport default Loader;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport MedicalItem from '../MedicalItem';\nimport Loader from '../../Loader';\n\nimport { dataFetch } from '../../../store/actions';\nimport './styles.scss';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst MedicalList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(dataFetch());\n  }, [dispatch]);\n\n  const medicalData = useSelector(state => state.medicalReducer.medicalList);\n  const medicalDataLoader = useSelector(state => state.medicalReducer.loading);\n\n  return (\n    <div className=\"medical-list\">\n      <div className=\"container\">\n        <h2 className=\"medical-list__title\">Medical list</h2>\n\n        {medicalDataLoader && <Loader />}\n\n        <ul className=\"medical-list__catalog\">\n          {\n            medicalData && medicalData.map(item => {\n              return (\n                <MedicalItem\n                  key={item.id}\n                  value={item}\n                />\n              );\n            })\n          }\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MedicalList;\n","import React from 'react';\n\nimport './styles.scss';\n\n//---------------------------------------------------------------------------------------------------------------------\n\nconst InputError = ({ error }) => (\n  <span className=\"input-error\">{error}</span>\n);\n\nexport default InputError;\n","import React from 'react';\n\nimport './styles.scss';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst InputLabel = ({ id, text }) => (\n  <label htmlFor={id} className=\"input-label\">\n    {text}\n  </label>\n);\n\nexport default InputLabel;\n","import React, { useCallback, useState } from 'react';\nimport classNames from 'classnames';\n\nimport InputError from '../InputError';\nimport InputLabel from '../InputLabel';\n\nimport './styles.scss';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst InputText = ({ type, id, name, placeholder, onChange, error, text, value }) => {\n  const [selfValue, setSelfValue] = useState('');\n\n  const inputChangeHandler = useCallback(e => {\n    setSelfValue(e.currentTarget.value);\n  }, []);\n\n  const change = onChange ? onChange : inputChangeHandler;\n  const val = value ? value : selfValue;\n\n  const inputClasses = classNames(\n    'input-text',\n    { [`input-text--error`]: error },\n  );\n\n  return (\n    <div className={inputClasses}>\n      <InputLabel id={id} text={text} />\n      <input\n        id={id}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        value={val}\n        onChange={change}\n        autoComplete=\"off\"\n      />\n      <InputError error={error} />\n    </div>\n  );\n};\n\nexport default InputText;\n","import React from 'react';\n\nimport InputText from '../../InputText';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst FormRequiredFields = ({ values, errors, handleChange }) => (\n  <>\n    <div className=\"form__item\">\n      <InputText\n        type=\"text\"\n        name=\"code\"\n        placeholder=\"Code\"\n        id=\"code\"\n        text=\"Code\"\n        onChange={handleChange}\n        value={values.code}\n        error={errors.code}\n      />\n    </div>\n    <div className=\"form__item\">\n      <InputText\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Name\"\n        id=\"name\"\n        text=\"Name\"\n        onChange={handleChange}\n        value={values.name}\n        error={errors.name}\n      />\n    </div>\n    <div className=\"form__item\">\n      <InputText\n        type=\"text\"\n        name=\"price\"\n        placeholder=\"Price\"\n        id=\"price\"\n        text=\"Price\"\n        onChange={handleChange}\n        value={values.price}\n        error={errors.price}\n      />\n    </div>\n    <div className=\"form__item\">\n      <InputText\n        type=\"number\"\n        name=\"shelfLife\"\n        placeholder=\"Expiration date\"\n        id=\"shelfLife\"\n        text=\"Expiration date\"\n        onChange={handleChange}\n        value={values.shelfLife}\n        error={errors.shelfLife}\n      />\n    </div>\n  </>\n);\n\nexport default FormRequiredFields;\n","import React, { useCallback, useState } from 'react';\nimport classNames from 'classnames';\n\nimport InputLabel from '../InputLabel';\nimport InputError from '../InputError';\n\nimport './styles.scss';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst Textarea = ({ placeholder, text, error, id, disabled, name, onChange, value }) => {\n  const [selfValue, setSelfValue] = useState('');\n\n  const textareaChangeHandler = useCallback(e => {\n    setSelfValue(e.currentTarget.value);\n  }, []);\n\n  const inputClasses = classNames(\n    'textarea',\n    { [`textarea--error`]: error },\n  );\n\n  const change = onChange ? onChange : textareaChangeHandler;\n  const val = value ? value : selfValue;\n\n  return (\n    <div className={inputClasses}>\n      <InputLabel id={id} text={text} />\n      <textarea\n        id={id}\n        name={name}\n        placeholder={placeholder}\n        disabled={disabled}\n        onChange={change}\n        value={val}\n        rows=\"3\"\n      />\n      <InputError error={error} />\n    </div>\n  );\n};\n\nexport default Textarea;\n","import React from 'react';\n\nimport Textarea from '../../Textarea';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst FormNotRequiredFields = ({ values, errors, handleChange }) => (\n  <>\n    <div className=\"form__item\">\n      <Textarea\n        type=\"text\"\n        name=\"compositionAndFormOfRelease\"\n        placeholder=\"Composition and release form\"\n        id=\"compositionAndFormOfRelease\"\n        text=\"Composition and release form\"\n        onChange={handleChange}\n        value={values.compositionAndFormOfRelease}\n        error={errors.compositionAndFormOfRelease}\n      />\n    </div>\n    <div className=\"form__item\">\n      <Textarea\n        type=\"text\"\n        name=\"indication\"\n        placeholder=\"Indication\"\n        id=\"indication\"\n        text=\"Indication\"\n        onChange={handleChange}\n        value={values.indication}\n        error={errors.indication}\n      />\n    </div>\n    <div className=\"form__item\">\n      <Textarea\n        type=\"text\"\n        name=\"—Åontrandications\"\n        placeholder=\"Contrandications\"\n        id=\"—Åontrandications\"\n        text=\"Contrandications\"\n        onChange={handleChange}\n        value={values.—Åontrandications}\n        error={errors.—Åontrandications}\n      />\n    </div>\n  </>\n);\n\nexport default FormNotRequiredFields;\n","import * as yup from 'yup';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst REQUIRED = 'required';\nconst CODE_ERROR = 'String from 5 to 10 characters';\nconst NAME_ERROR = 'String from 5 to 100 characters';\nconst PRICE_ERROR = 'A number ranging from 0.01 to 1,000,000';\nconst SHELF_LIFE_ERROR = 'Must be an integer number from 1 to 1000';\nconst RELEASE_ERROR = 'String up to 2000 characters';\nconst TYPE_ERROR = 'Please enter a valid number';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst initialValues = {\n  code: '',\n  name: '',\n  price: '',\n  shelfLife: '',\n  compositionAndFormOfRelease: '',\n  indication: '',\n  —Åontrandications: '',\n};\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst validationSchema = yup.object({\n\n  code: yup.string()\n    .required(REQUIRED)\n    .min(5, CODE_ERROR)\n    .max(10, CODE_ERROR),\n\n  name: yup.string()\n    .required(REQUIRED)\n    .min(5, NAME_ERROR)\n    .max(100, NAME_ERROR),\n\n  price: yup.number()\n    .required(REQUIRED)\n    .min(0.01, PRICE_ERROR)\n    .max(1000000, PRICE_ERROR)\n    .typeError(TYPE_ERROR),\n\n  shelfLife: yup.number()\n    .required(REQUIRED)\n    .integer(SHELF_LIFE_ERROR)\n    .min(1, SHELF_LIFE_ERROR)\n    .max(1000, SHELF_LIFE_ERROR),\n\n  compositionAndFormOfRelease: yup.string()\n    .max(2000, RELEASE_ERROR),\n\n  indication: yup.string()\n    .max(2000, RELEASE_ERROR),\n\n  —Åontrandications: yup.string()\n    .max(2000, RELEASE_ERROR),\n\n});\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport default {\n  initialValues,\n  validationSchema,\n};\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\n\nimport FormRequiredFields from './FormRequiredFields';\nimport FormNotRequiredFields from './FormNotRequiredFields';\nimport Button from '../Button';\n\nimport FormValidation from './FormValidation';\nimport { addItem, updateItem } from '../../store/actions';\nimport { toggleModal } from '../../store/actions/modalActions';\nimport './styles.scss';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst Form = () => {\n  const dispatch = useDispatch();\n  const medicalEdit = useSelector(state => state.medicalReducer.editItem);\n\n  const handleAdd = (values) => dispatch(addItem(values));\n  const handleUpdate = (payload) => dispatch(updateItem(payload));\n  const handleToggle = () => dispatch(toggleModal());\n\n  const formSubmit = medicalEdit ? handleUpdate : handleAdd;\n\n  const [showRequired, setShowRequired] = useState(true);\n  const handleShow = useCallback(() => {\n    setShowRequired(!showRequired);\n  }, [showRequired]);\n\n  return (\n    <>\n      <h2 className=\"form__title\">\n        {medicalEdit ? 'Edit' : 'Add'} medicine item {showRequired ? '1' : '2'}/2\n      </h2>\n\n      <Formik\n        initialValues={medicalEdit ? medicalEdit : FormValidation.initialValues}\n        validationSchema={FormValidation.validationSchema}\n        onSubmit={values => formSubmit(values)}\n        enableReinitialize={true}\n      >\n        {({ handleChange, handleSubmit, values, errors }) => (\n          <form onSubmit={handleSubmit}>\n            {\n              showRequired ? (\n                <FormRequiredFields errors={errors} values={values} handleChange={handleChange} />\n              ) : (\n                <FormNotRequiredFields errors={errors} values={values} handleChange={handleChange} />\n              )\n            }\n            <div className=\"form__controls\">\n              <Button\n                type=\"button\"\n                text=\"Cancel\"\n                variant=\"secondary\"\n                onClick={handleToggle}\n              />\n              <Button\n                type=\"button\"\n                text={showRequired ? 'Next' : 'Prev'}\n                variant=\"secondary\"\n                onClick={handleShow}\n              />\n              <Button\n                type=\"submit\"\n                text={medicalEdit ? 'Edit' : 'Create'}\n                variant=\"secondary\"\n              />\n            </div>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default Form;\n","export const toggleModal = () => ({\n  type: 'TOGGLE_MODAL'\n});\n","import { createPortal } from 'react-dom';\nimport { useEffect, useRef, useState } from 'react';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst Portal = ({ children, selector }) => {\n  const ref = useRef();\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    ref.current = document.querySelector(selector);\n    setMounted(true);\n  }, [selector]);\n\n  return mounted ? createPortal(children, ref.current) : null;\n};\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport default Portal;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Form from '../Form';\nimport Portal from '../Portal';\n\nimport './styles.scss';\n\n//---------------------------------------------------------------------------------------------------------------------\n\nconst Modal = () => {\n\n  const isShown = useSelector(state => state.modalReducer.isShown);\n\n  return (\n    <>\n      {isShown && (\n        <Portal selector=\"#portal\">\n          <div className=\"modal__overlay\">\n            <div className=\"modal\">\n              <div className=\"modal__body\">\n                <Form />\n              </div>\n            </div>\n          </div>\n        </Portal>\n      )}\n    </>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { itemCreate } from '../../store/actions';\nimport './styles.scss';\n\n//---------------------------------------------------------------------------------------------------------------------\n\nconst Plus = () => {\n\n  const dispatch = useDispatch();\n  const createItem = () => dispatch(itemCreate());\n\n  return (\n    <button\n      className=\"plus\"\n      onClick={createItem}\n    />\n  );\n};\n\nexport default Plus;\n","import React from 'react';\n\nimport Header from '../../components/Header';\nimport MedicalList from '../../components/Medical/MedicalList';\nimport Modal from '../../components/Modal';\nimport Plus from '../../components/Plus';\n\nimport './styles.scss';\n\n//---------------------------------------------------------------------------------------------------------------------\n\nconst Home = () => {\n\n  return (\n    <div>\n      <Header/>\n\n      <MedicalList />\n      <Modal />\n      <Plus />\n    </div>\n  );\n};\n\nexport default Home;\n","import * as yup from 'yup';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst REQUIRED = 'Required';\nconst EMAIL_ERROR = 'Please enter a valid email address';\nconst PASSWORD_ERROR = 'Password must be at least with 6 characters';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst validationSchema = yup.object({\n\n  email: yup.string()\n    .required(REQUIRED)\n    .email(EMAIL_ERROR),\n\n  password: yup.string()\n    .required(REQUIRED)\n    .min(6, PASSWORD_ERROR)\n\n});\n\n// ------------------------------------------------------------------------------------------------\n\nexport default {\n  initialValues,\n  validationSchema,\n};\n","import React, { useCallback } from 'react';\nimport { withRouter } from 'react-router';\nimport { Formik } from 'formik';\n\nimport InputText from '../InputText';\nimport Button from '../Button';\n\nimport FormSignInValidation from './FormSignInValidation';\nimport { app } from '../../services/firebase';\nimport './styles.scss';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst FormSignIn = ({ history }) => {\n\n  const handleLogin = useCallback(\n    async (values) => {\n      try {\n        await app.auth().signInWithEmailAndPassword(values.email, values.password);\n        history.push('/');\n      } catch (error) {\n        alert(error);\n      }\n    },\n    [history],\n  );\n\n  return (\n    <div className=\"sign-in\">\n      <h1 className=\"sign-in__title\">Please Sign In</h1>\n      <Formik\n        initialValues={FormSignInValidation.initialValues}\n        validationSchema={FormSignInValidation.validationSchema}\n        onSubmit={values => handleLogin(values)}\n      >\n        {({ handleChange, handleSubmit, values, errors }) => (\n          <form onSubmit={handleSubmit} className=\"sign-in__form\">\n            <div className=\"form__item\">\n              <InputText\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Email\"\n                id=\"email\"\n                text=\"Email\"\n                onChange={handleChange}\n                value={values.email}\n                error={errors.email}\n              />\n            </div>\n            <div className=\"form__item\">\n              <InputText\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                id=\"password\"\n                text=\"Password\"\n                onChange={handleChange}\n                value={values.password}\n                error={errors.password}\n              />\n            </div>\n            <Button\n              type=\"submit\"\n              text=\"Submit\"\n              variant=\"secondary\"\n              className=\"sign-in__btn\"\n            />\n          </form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default withRouter(FormSignIn);\n","import React, {useContext} from \"react\";\nimport {Redirect} from \"react-router\";\n\nimport {AuthContext} from \"../../context/AuthContext\";\nimport FormSignIn from \"../../components/FormSignIn\";\n\nimport './styles.scss';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst SignIn = () => {\n  const { currentUser } = useContext(AuthContext);\n\n  return (\n    currentUser ? <Redirect to=\"/\" /> : <FormSignIn />\n  )\n};\n\nexport default SignIn;\n","export const sitePath = {\n  home: '/',\n  signIn: '/signin'\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { sitePath } from '../../constants/paths';\nimport './styles.scss';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst Page404 = () => (\n  <div className=\"error404\">\n    <div className=\"error404__wrapper\">\n      <h1 className=\"error404__title\">404</h1>\n      <Link className=\"error404__btn\" to={sitePath.home}>Home</Link>\n    </div>\n  </div>\n);\n\nexport default Page404;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport {AuthContext} from \"../../context/AuthContext\";\nimport {sitePath} from \"../../constants/paths\";\n\n//---------------------------------------------------------------------------------------------------------------------\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n\n  const {currentUser} = useContext(AuthContext);\n\n  return (\n    <Route\n      {...rest}\n      render={routeProps =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={sitePath.signIn} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute\n","import React from 'react';\nimport {BrowserRouter as Router, Route, HashRouter} from \"react-router-dom\";\nimport {Switch} from \"react-router\";\n\nimport Home from \"./pages/Home\";\nimport SignIn from \"./pages/SignIn\";\nimport Page404 from \"./pages/Page404\";\n\nimport {AuthProvider} from \"./context/AuthContext\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport {sitePath} from \"./constants/paths\";\nimport { createBrowserHistory } from \"history\";\n\n\n\nconst App = () => {\n  const history = createBrowserHistory();\n\n  return (\n    <AuthProvider>\n      <HashRouter basename={process.env.PUBLIC_URL} history={history}>\n        <Switch>\n\n          <PrivateRoute exact path={sitePath.home} component={Home}/>\n          <Route exact path={sitePath.signIn} component={SignIn}/>\n          <Route component={Page404}/>\n\n        </Switch>\n      </HashRouter>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { databaseFirebase } from './firebase';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport const dataFetchFirebase = () => {\n  return new Promise((resolve, reject) => {\n    databaseFirebase.once('value', (snapshot) => {\n      const todo = snapshot.val();\n      const todoList = [];\n      for (let id in todo) {\n        todoList.push({ id, ...todo[id] });\n      }\n      resolve(todoList);\n    });\n  });\n};\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport const addItemFirebase = (payload) => {\n  return databaseFirebase.push(payload)\n    .then(data => ({ id: data.getKey(), ...payload }))\n    .catch(error => alert(error));\n};\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport const deleteItemFirebase = (id) => {\n  const todoRef = databaseFirebase.child(id);\n\n  return todoRef.remove()\n    .then(() => id)\n    .catch(error => alert(error));\n};\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport const updateItemFirebase = (payload) => {\n  const ref = databaseFirebase.child(payload.id);\n\n  return ref.update(payload)\n    .then(() => ({id: payload.id, ...payload}))\n    .catch(error => alert(error));\n};\n\n\n\n","import { call, put, takeEvery, takeLatest } from 'redux-saga/effects';\n\nimport {\n  dataRequested,\n  dataRequestedSuccess,\n  dataRequestedError,\n  addItemSuccess,\n  deleteItemSuccess,\n  editItem,\n  editItemClear,\n  updateItemSuccess,\n} from '../actions';\nimport { addItemFirebase, dataFetchFirebase, deleteItemFirebase, updateItemFirebase } from '../../services/CRUD';\nimport { toggleModal } from '../actions/modalActions';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nfunction* dataFetch() {\n  try {\n    yield put(dataRequested());\n    const data = yield call(dataFetchFirebase);\n    yield put(dataRequestedSuccess(data));\n  } catch (error) {\n    yield put(dataRequestedError());\n  }\n}\n\nexport function* watchDataFetch() {\n  yield takeEvery('DATA_FETCH', dataFetch);\n}\n\n// --------------------------------------------------------------------------------------------------------------------\n\nfunction* itemAdd({ payload }) {\n  const data = yield call(addItemFirebase, payload);\n  yield put(addItemSuccess(data));\n  yield put(toggleModal());\n}\n\n\nexport function* watchItemAdd() {\n  yield takeLatest('ADD_ITEM', itemAdd);\n}\n\n// --------------------------------------------------------------------------------------------------------------------\n\nfunction* itemEdit({ payload }) {\n  yield put(editItem(payload));\n\n  yield put(toggleModal());\n}\n\nexport function* watchItemEdit() {\n  yield takeLatest('EDIT_ITEM_START', itemEdit);\n}\n\n// --------------------------------------------------------------------------------------------------------------------\n\nfunction* itemDelete({ payload }) {\n  const id = yield call(deleteItemFirebase, payload);\n  yield put(deleteItemSuccess(id));\n}\n\nexport function* watchItemDelete() {\n  yield takeLatest('DELETE_ITEM', itemDelete);\n}\n\n// --------------------------------------------------------------------------------------------------------------------\n\nfunction* itemUpdate({ payload }) {\n  const data = yield call(updateItemFirebase, payload);\n  yield put(updateItemSuccess(data));\n  yield put(editItemClear());\n  yield put(toggleModal());\n}\n\nexport function* watchItemUpdate() {\n  yield takeLatest('UPDATE_ITEM', itemUpdate);\n}\n\n// --------------------------------------------------------------------------------------------------------------------\n\n\nfunction* itemCreate() {\n  yield put(editItemClear());\n  yield put(toggleModal());\n}\n\nexport function* watchItemCreate() {\n  yield takeLatest('ITEM_CREATE', itemCreate);\n}\n\n// --------------------------------------------------------------------------------------------------------------------\n\n","import { all } from 'redux-saga/effects';\n\nimport {\n  watchDataFetch,\n  watchItemAdd,\n  watchItemEdit,\n  watchItemDelete,\n  watchItemUpdate,\n  watchItemCreate,\n} from './sagas/dataSaga';\n\n// --------------------------------------------------------------------------------------------------------------------\n\nfunction* rootSaga() {\n  yield all([\n    watchDataFetch(),\n    watchItemAdd(),\n    watchItemEdit(),\n    watchItemDelete(),\n    watchItemUpdate(),\n    watchItemCreate(),\n  ]);\n}\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport default rootSaga;\n","import { DATA, ADD, DELETE, EDIT, UPDATE } from '../../constants/actionTypes';\n\nconst initialState = {\n  medicalList: [],\n  loading: false,\n  editItem: null,\n};\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst medicalReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case DATA.REQUESTED:\n      return {\n        ...state,\n        loading: true,\n      };\n    case DATA.REQUESTED_SUCCESS:\n      return {\n        ...state,\n        medicalList: [...action.payload],\n        loading: false,\n      };\n    case DATA.REQUESTED_ERROR:\n      return {\n        ...state,\n        loading: false,\n      };\n    case ADD.ITEM_SUCCESS:\n      return {\n        ...state,\n        medicalList: [...state.medicalList, action.payload],\n      };\n    case DELETE.ITEM_SUCCESS:\n      return {\n        ...state,\n        medicalList: [...state.medicalList.filter(item => item.id !== action.payload)]\n      };\n    case EDIT.ITEM:\n      return {\n        ...state,\n        editItem: state.medicalList.filter(item => item.id === action.payload)[0]\n      };\n    case EDIT.ITEM_CLEAR:\n      return {\n        ...state,\n        editItem: null,\n      };\n    case UPDATE.ITEM_SUCCESS:\n      return {\n        ...state,\n        medicalList: [...state.medicalList.map(item => item.id === action.payload.id ? action.payload : item)]\n      };\n    default:\n      return state;\n  }\n};\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport default medicalReducer;\n","const initialState = {\n  isShown: false,\n};\n\n//---------------------------------------------------------------------------------------------------------------------\n\nconst modalReducer = (state = initialState, action) => {\n  if (action.type === 'TOGGLE_MODAL') {\n    return {\n      ...state,\n      isShown: !state.isShown\n    };\n  } else {\n    return state;\n  }\n};\n\n//---------------------------------------------------------------------------------------------------------------------\n\nexport default modalReducer;\n","import {combineReducers} from \"redux\";\n\nimport medicalReducer from \"./medicalReducer\";\nimport modalReducer from \"./modalReducer\";\n\n//---------------------------------------------------------------------------------------------------------------------\n\nconst rootReducer = combineReducers({\n  medicalReducer,\n  modalReducer\n});\n\n//---------------------------------------------------------------------------------------------------------------------\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootSaga from \"./rootSaga\";\nimport rootReducer from \"./reducers/rootReducer\";\n\n// --------------------------------------------------------------------------------------------------------------------\n\nconst sagaMiddleware = createSagaMiddleware();\nconst { run } = sagaMiddleware;\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nrun(rootSaga);\n\n// --------------------------------------------------------------------------------------------------------------------\n\nexport default store;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./store\";\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}